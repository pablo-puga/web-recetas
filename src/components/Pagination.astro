---
import { FaAngleLeft, FaAngleRight } from 'react-icons/fa';

import type { Page } from 'astro';

import { ADJACENT_PAGES } from '@lib/constants';

interface Props {
    page: Page;
}

const { page } = Astro.props;

const currentPage = page.currentPage;
const firstPage = 1;
const lastPage = page.lastPage;
---

<div class="w-full">
    <div class="w-full flex justify-between text-sm mb-4 md:text-base lg:mb-5">
        <span class="info">
            Viendo {page.start + 1} - {page.end + 1} de {page.total}
        </span>
        <span class="info">PÃ¡gina {currentPage} de {lastPage}</span>
    </div>
    <slot />
    {
        page.total >= page.size && (
            <nav class="mt-5 mb-5 lg:mb-0 lg:mt-10">
                <ul class="flex flex-wrap justify-center leading-7 gap-1 text-sm sm:gap-2 md:text-base">
                    {page.url.prev && (
                        <li>
                            <a
                                href={page.url.prev}
                                class="pagination-item sm:min-w-[110px]"
                            >
                                <FaAngleLeft className="text-lg inline -mt-0.5" />{' '}
                                <span class="hidden sm:inline">Anterior</span>
                            </a>
                        </li>
                    )}
                    {currentPage - ADJACENT_PAGES > firstPage && (
                        <li>
                            <a href="/pagina/1" class="pagination-item">
                                1
                            </a>
                        </li>
                    )}
                    {currentPage - ADJACENT_PAGES > firstPage + 1 && (
                        <li>...</li>
                    )}
                    {Array.from({ length: page.lastPage }, (_, i) => i + 1)
                        .filter(
                            (p) =>
                                p >= currentPage - ADJACENT_PAGES &&
                                p <= currentPage + ADJACENT_PAGES,
                        )
                        .map((p) => (
                            <li>
                                <a
                                    class="pagination-item"
                                    aria-current={
                                        p === currentPage ? 'true' : 'false'
                                    }
                                    href={`/pagina/${p}`}
                                >
                                    {p}
                                </a>
                            </li>
                        ))}
                    {currentPage + ADJACENT_PAGES < lastPage - 1 && (
                        <li>...</li>
                    )}
                    {currentPage + ADJACENT_PAGES < lastPage && (
                        <li>
                            <a
                                href={`/pagina/${lastPage}`}
                                class="pagination-item"
                            >
                                {lastPage}
                            </a>
                        </li>
                    )}
                    {page.url.next && (
                        <li>
                            <a
                                href={page.url.next}
                                class="pagination-item sm:min-w-[110px]"
                            >
                                <span class="hidden sm:inline">Siguiente</span>{' '}
                                <FaAngleRight className="text-lg inline -mt-0.5" />
                            </a>
                        </li>
                    )}
                </ul>
            </nav>
        )
    }
</div>

<style>
    .info {
        @apply px-2 py-1 bg-theme-red-100 rounded-sm;
    }

    .pagination-item {
        @apply bg-theme-red-100 px-2 py-1 rounded-sm hover:!bg-theme-red-400 hover:text-white visited:text-theme-grey-900 transition-colors text-center;

        &[aria-current='true'] {
            @apply font-bold bg-theme-red-200;
        }
    }
</style>
